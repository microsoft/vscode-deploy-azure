on: [push]
jobs:
  build-and-deploy:
    env:
      REGISTRY_URL: {{#toLower}}{{{inputs.containerRegistry.name}}}{{/toLower}}.azurecr.io
      NAMESPACE: {{{ inputs.namespace }}}
      IMAGE_NAME: {{#substring}}'{{#toLower}}{{#sanitizeString}}{{{ inputs.aksCluster.name }}}{{/sanitizeString}}{{/toLower}}' 0 50{{/substring}}
      SECRET_NAME: {{#substring}}'{{#toLower}}{{#sanitizeString}}{{{ inputs.aksCluster.name }}}{{/sanitizeString}}{{/toLower}}' 0 12{{/substring}}

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - uses: azure/docker-login@v1
      with:
        {{=<% %>=}}
        login-server: ${{ env.REGISTRY_URL }}
        username: ${{ secrets.<% assets.containerRegistryUsername %> }} 
        password: ${{ secrets.<% assets.containerRegistryPassword %> }}
        <%={{ }}=%> 
    
    - name: Build and push image to ACR
      id: build-image
      run: |
        docker build "$GITHUB_WORKSPACE/{{{ workingDirectory }}}" -f  "{{{ workingDirectory }}}/Dockerfile" -t  $REGISTRY_URL/$IMAGE_NAME:{{=<% %>=}}${{ github.sha }}<%={{ }}=%>
        docker push $REGISTRY_URL/$IMAGE_NAME:{{=<% %>=}}${{ github.sha }}<%={{ }}=%>
    
    - uses: azure/k8s-set-context@v1
      with:
         kubeconfig: {{=<% %>=}}${{ secrets.<% assets.kubeConfig %> }}<%={{ }}=%> 
      id: login
    
    - name: Create namespace
      run: |
        namespacePresent=`kubectl get namespace | grep $NAMESPACE | wc -l`
        if [ $namespacePresent -eq 0 ]
        then
            echo `kubectl create namespace $NAMESPACE`
        fi

    - uses: azure/k8s-create-secret@v1
      with:
        {{=<% %>=}}
        namespace: ${{ env.NAMESPACE  }}
        container-registry-url: ${{ env.REGISTRY_URL }}
        container-registry-username: ${{ secrets.<% assets.containerRegistryUsername %> }}
        container-registry-password: ${{ secrets.<% assets.containerRegistryPassword %> }}
        secret-name: ${{ env.SECRET_NAME  }}
        <%={{ }}=%>
       
    - uses: azure/k8s-deploy@v1
      with:
        namespace: {{=<% %>=}}${{ env.NAMESPACE  }}<%={{ }}=%>
        manifests: |
          {{{assets.deployment}}}
          {{#if}}{{{inputs.httpApplicationRouting}}} {{{assets.service-ingress}}}  {{{assets.service}}} {{/if}}
          {{#if}}{{{inputs.httpApplicationRouting}}} {{{assets.ingress}}} {{/if}}

        images: |
          {{=<% %>=}}${{ env.REGISTRY_URL }}/${{ env.IMAGE_NAME  }}:${{ github.sha }}<%={{ }}=%>
        imagepullsecrets: |
          {{=<% %>=}}${{ env.SECRET_NAME  }}<%={{ }}=%>